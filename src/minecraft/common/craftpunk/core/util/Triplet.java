package common.craftpunk.core.util;

public class Triplet<T1, T2, T3>
{
	public T1 first;
	public T2 second;
	public T3 third;

	public T1 getFirst()
	{
		return first;
	}
	public void setFirst(T1 first)
	{
		this.first = first;
	}
	public T2 getSecond()
	{
		return second;
	}
	public void setSecond(T2 second)
	{
		this.second = second;
	}
	public T3 getThird()
	{
		return third;
	}
	public void setThird(T3 third)
	{
		this.third = third;
	}
	
	public Triplet(T1 one, T2 two, T3 three)
	{
		this.first = one;
		this.second = two;
		this.third = three;
	}
	
	public boolean contains(Object obj)
	{
		return obj.equals(first) || obj.equals(second) || obj.equals(third);
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	/**
	 * autogenerated hashcode method
	 */
	@Override
	public int hashCode()
	{
		final int prime = 31;
		int result = 1;
		result = prime * result + ((first == null) ? 0 : first.hashCode());
		result = prime * result + ((second == null) ? 0 : second.hashCode());
		result = prime * result + ((third == null) ? 0 : third.hashCode());
		return result;
	}
	
	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	/**
	 * autogenerated hashcode method
	 */
	@Override
	public boolean equals(Object obj)
	{
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Triplet other = (Triplet) obj;
		if (first == null)
		{
			if (other.first != null)
				return false;
		}
		else if (!first.equals(other.first))
			return false;
		if (second == null)
		{
			if (other.second != null)
				return false;
		}
		else if (!second.equals(other.second))
			return false;
		if (third == null)
		{
			if (other.third != null)
				return false;
		}
		else if (!third.equals(other.third))
			return false;
		return true;
	}
}
